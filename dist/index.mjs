var p=(e,t)=>e+t,a=e=>e.reduce((t,r)=>t+r,0)/e.length,x=(e,t)=>Math.round(e/t)*t,g=(e,t,r,o,u)=>(e-t)*(u-o)/(r-t)+o,d=(e,t,r)=>(e-t)/(r-t),f=(e,t,r)=>(1-r)*e+r*t,n=(e,t)=>{let r=Array.isArray(e)?{x:e[0],y:e[1]}:e,o=Array.isArray(t)?{x:t[0],y:t[1]}:t;return[(r.x+o.x)/2,(r.y+o.y)/2]},y=(e,t)=>Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)),R=(e,t,r,o)=>({left:Math.min(e,r),top:Math.min(t,o),right:Math.max(e,r),bottom:Math.max(t,o)}),m=(e,t)=>e.left<t.right&&t.left<e.right&&e.top<t.bottom&&t.top<e.bottom,s=(e,t)=>e.left<=t.left&&e.top<=t.top&&e.right>=t.right&&e.bottom>=t.bottom,P=(e,t)=>e.x>t.left&&e.x<t.right&&e.y>t.top&&e.y<t.bottom,i=(e,t)=>e.left===t.left&&e.top===t.top&&e.right===t.right&&e.bottom===t.bottom,l=e=>e*180/Math.PI,w=e=>e*Math.PI/180,b=(e,t)=>Math.atan2(t.y-e.y,t.x-e.x),M=(e,t)=>l(b(e,t));var h=e=>({left:e.left,top:e.top,right:e.right,bottom:e.bottom}),c=class{constructor(t){if(typeof t=="string"){let r=document.querySelector(t);if(!r)throw new Error(`Element not found: ${t}`);this.ele=r}else this.ele=t}hasOverflow(){return this.ele.scrollHeight>this.ele.clientHeight||this.ele.scrollWidth>this.ele.clientWidth}hasCssOverflow(){return["auto","scroll"].includes(window.getComputedStyle(this.ele).overflow)}get rect(){return h(this.ele.getBoundingClientRect())}intersect(t){return m(this.rect,t.rect)}isContainedIn(t){return s(t.rect,this.rect)}compareRects(t){return i(this.rect,t.rect)}getCenter(){let t=this.rect,[r,o]=n({x:t.left,y:t.top},{x:t.right,y:t.bottom});return{x:r,y:o}}},A=()=>document.body.scrollHeight-window.innerHeight-window.scrollY;export{c as DomElement,a as average,s as contains,R as createRect,M as degreesAngle,w as degsToRads,y as distance,A as getDistanceToBottom,P as isInside,f as lerp,g as linearScale,n as midpoint,d as normalizeRatio,m as overlaps,b as radiansAngle,l as radsToDegs,i as rectsEqual,x as roundNearest,p as sum};
//# sourceMappingURL=index.mjs.map